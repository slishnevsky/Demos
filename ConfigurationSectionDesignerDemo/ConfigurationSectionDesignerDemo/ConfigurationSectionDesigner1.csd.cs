//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConfigurationSectionDesignerDemo
{
    
    
    /// <summary>
    /// The AngusSettings Configuration Section.
    /// </summary>
    public partial class AngusSettings : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the AngusSettings Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string AngusSettingsSectionName = "angusSettings";
        
        /// <summary>
        /// The XML path of the AngusSettings Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string AngusSettingsSectionPath = "angusSettings";
        
        /// <summary>
        /// Gets the AngusSettings instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public static global::ConfigurationSectionDesignerDemo.AngusSettings Instance
        {
            get
            {
                return ((global::ConfigurationSectionDesignerDemo.AngusSettings)(global::System.Configuration.ConfigurationManager.GetSection(global::ConfigurationSectionDesignerDemo.AngusSettings.AngusSettingsSectionPath)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesignerDemo.AngusSettings.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::ConfigurationSectionDesignerDemo.AngusSettings.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region TenantApiSettings Property
        /// <summary>
        /// The XML name of the <see cref="TenantApiSettings"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string TenantApiSettingsPropertyName = "tenantApiSettings";
        
        /// <summary>
        /// Gets or sets the TenantApiSettings.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The TenantApiSettings.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesignerDemo.AngusSettings.TenantApiSettingsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::ConfigurationSectionDesignerDemo.TenantApiSettings TenantApiSettings
        {
            get
            {
                return ((global::ConfigurationSectionDesignerDemo.TenantApiSettings)(base[global::ConfigurationSectionDesignerDemo.AngusSettings.TenantApiSettingsPropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesignerDemo.AngusSettings.TenantApiSettingsPropertyName] = value;
            }
        }
        #endregion
        
        #region GeneralSettings Property
        /// <summary>
        /// The XML name of the <see cref="GeneralSettings"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string GeneralSettingsPropertyName = "generalSettings";
        
        /// <summary>
        /// Gets or sets the GeneralSettings.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The GeneralSettings.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesignerDemo.AngusSettings.GeneralSettingsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::ConfigurationSectionDesignerDemo.GeneralSettings GeneralSettings
        {
            get
            {
                return ((global::ConfigurationSectionDesignerDemo.GeneralSettings)(base[global::ConfigurationSectionDesignerDemo.AngusSettings.GeneralSettingsPropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesignerDemo.AngusSettings.GeneralSettingsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace ConfigurationSectionDesignerDemo
{
    
    
    /// <summary>
    /// The TenantApiSettings Configuration Element.
    /// </summary>
    public partial class TenantApiSettings : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region BaseUrl Property
        /// <summary>
        /// The XML name of the <see cref="BaseUrl"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string BaseUrlPropertyName = "baseUrl";
        
        /// <summary>
        /// Gets or sets the BaseUrl.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The BaseUrl.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesignerDemo.TenantApiSettings.BaseUrlPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string BaseUrl
        {
            get
            {
                return ((string)(base[global::ConfigurationSectionDesignerDemo.TenantApiSettings.BaseUrlPropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesignerDemo.TenantApiSettings.BaseUrlPropertyName] = value;
            }
        }
        #endregion
        
        #region TokenEndpoint Property
        /// <summary>
        /// The XML name of the <see cref="TokenEndpoint"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string TokenEndpointPropertyName = "tokenEndpoint";
        
        /// <summary>
        /// Gets or sets the TokenEndpoint.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The TokenEndpoint.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesignerDemo.TenantApiSettings.TokenEndpointPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string TokenEndpoint
        {
            get
            {
                return ((string)(base[global::ConfigurationSectionDesignerDemo.TenantApiSettings.TokenEndpointPropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesignerDemo.TenantApiSettings.TokenEndpointPropertyName] = value;
            }
        }
        #endregion
        
        #region ClientId Property
        /// <summary>
        /// The XML name of the <see cref="ClientId"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string ClientIdPropertyName = "clientId";
        
        /// <summary>
        /// Gets or sets the ClientId.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The ClientId.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesignerDemo.TenantApiSettings.ClientIdPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue="0")]
        public virtual string ClientId
        {
            get
            {
                return ((string)(base[global::ConfigurationSectionDesignerDemo.TenantApiSettings.ClientIdPropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesignerDemo.TenantApiSettings.ClientIdPropertyName] = value;
            }
        }
        #endregion
        
        #region ClientSecret Property
        /// <summary>
        /// The XML name of the <see cref="ClientSecret"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string ClientSecretPropertyName = "clientSecret";
        
        /// <summary>
        /// Gets or sets the ClientSecret.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The ClientSecret.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesignerDemo.TenantApiSettings.ClientSecretPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string ClientSecret
        {
            get
            {
                return ((string)(base[global::ConfigurationSectionDesignerDemo.TenantApiSettings.ClientSecretPropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesignerDemo.TenantApiSettings.ClientSecretPropertyName] = value;
            }
        }
        #endregion
        
        #region BuildingId Property
        /// <summary>
        /// The XML name of the <see cref="BuildingId"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string BuildingIdPropertyName = "buildingId";
        
        /// <summary>
        /// Gets or sets the BuildingId.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The BuildingId.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesignerDemo.TenantApiSettings.BuildingIdPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string BuildingId
        {
            get
            {
                return ((string)(base[global::ConfigurationSectionDesignerDemo.TenantApiSettings.BuildingIdPropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesignerDemo.TenantApiSettings.BuildingIdPropertyName] = value;
            }
        }
        #endregion
        
        #region GrantType Property
        /// <summary>
        /// The XML name of the <see cref="GrantType"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string GrantTypePropertyName = "grantType";
        
        /// <summary>
        /// Gets or sets the GrantType.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The GrantType.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesignerDemo.TenantApiSettings.GrantTypePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string GrantType
        {
            get
            {
                return ((string)(base[global::ConfigurationSectionDesignerDemo.TenantApiSettings.GrantTypePropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesignerDemo.TenantApiSettings.GrantTypePropertyName] = value;
            }
        }
        #endregion
        
        #region Scope Property
        /// <summary>
        /// The XML name of the <see cref="Scope"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string ScopePropertyName = "scope";
        
        /// <summary>
        /// Gets or sets the Scope.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The Scope.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesignerDemo.TenantApiSettings.ScopePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Scope
        {
            get
            {
                return ((string)(base[global::ConfigurationSectionDesignerDemo.TenantApiSettings.ScopePropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesignerDemo.TenantApiSettings.ScopePropertyName] = value;
            }
        }
        #endregion
        
        #region NumImmediateRetries Property
        /// <summary>
        /// The XML name of the <see cref="NumImmediateRetries"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string NumImmediateRetriesPropertyName = "numImmediateRetries";
        
        /// <summary>
        /// Gets or sets the NumImmediateRetries.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The NumImmediateRetries.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesignerDemo.TenantApiSettings.NumImmediateRetriesPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual int NumImmediateRetries
        {
            get
            {
                return ((int)(base[global::ConfigurationSectionDesignerDemo.TenantApiSettings.NumImmediateRetriesPropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesignerDemo.TenantApiSettings.NumImmediateRetriesPropertyName] = value;
            }
        }
        #endregion
        
        #region NumDelayedRetries Property
        /// <summary>
        /// The XML name of the <see cref="NumDelayedRetries"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string NumDelayedRetriesPropertyName = "numDelayedRetries";
        
        /// <summary>
        /// Gets or sets the NumDelayedRetries.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The NumDelayedRetries.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesignerDemo.TenantApiSettings.NumDelayedRetriesPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual int NumDelayedRetries
        {
            get
            {
                return ((int)(base[global::ConfigurationSectionDesignerDemo.TenantApiSettings.NumDelayedRetriesPropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesignerDemo.TenantApiSettings.NumDelayedRetriesPropertyName] = value;
            }
        }
        #endregion
        
        #region DelaySecs Property
        /// <summary>
        /// The XML name of the <see cref="DelaySecs"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string DelaySecsPropertyName = "delaySecs";
        
        /// <summary>
        /// Gets or sets the DelaySecs.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The DelaySecs.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesignerDemo.TenantApiSettings.DelaySecsPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual int DelaySecs
        {
            get
            {
                return ((int)(base[global::ConfigurationSectionDesignerDemo.TenantApiSettings.DelaySecsPropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesignerDemo.TenantApiSettings.DelaySecsPropertyName] = value;
            }
        }
        #endregion
        
        #region RetryStatusCodes Property
        /// <summary>
        /// The XML name of the <see cref="RetryStatusCodes"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string RetryStatusCodesPropertyName = "retryStatusCodes";
        
        /// <summary>
        /// Gets or sets the RetryStatusCodes.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The RetryStatusCodes.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesignerDemo.TenantApiSettings.RetryStatusCodesPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string RetryStatusCodes
        {
            get
            {
                return ((string)(base[global::ConfigurationSectionDesignerDemo.TenantApiSettings.RetryStatusCodesPropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesignerDemo.TenantApiSettings.RetryStatusCodesPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace ConfigurationSectionDesignerDemo
{
    
    
    /// <summary>
    /// The GeneralSettings Configuration Element.
    /// </summary>
    public partial class GeneralSettings : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region TenantName Property
        /// <summary>
        /// The XML name of the <see cref="TenantName"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string TenantNamePropertyName = "tenantName";
        
        /// <summary>
        /// Gets or sets the TenantName.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The TenantName.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesignerDemo.GeneralSettings.TenantNamePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string TenantName
        {
            get
            {
                return ((string)(base[global::ConfigurationSectionDesignerDemo.GeneralSettings.TenantNamePropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesignerDemo.GeneralSettings.TenantNamePropertyName] = value;
            }
        }
        #endregion
        
        #region UsesVerifyStatus Property
        /// <summary>
        /// The XML name of the <see cref="UsesVerifyStatus"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string UsesVerifyStatusPropertyName = "usesVerifyStatus";
        
        /// <summary>
        /// Gets or sets the UsesVerifyStatus.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The UsesVerifyStatus.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesignerDemo.GeneralSettings.UsesVerifyStatusPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual bool UsesVerifyStatus
        {
            get
            {
                return ((bool)(base[global::ConfigurationSectionDesignerDemo.GeneralSettings.UsesVerifyStatusPropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesignerDemo.GeneralSettings.UsesVerifyStatusPropertyName] = value;
            }
        }
        #endregion
        
        #region VerifyDelay Property
        /// <summary>
        /// The XML name of the <see cref="VerifyDelay"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string VerifyDelayPropertyName = "verifyDelay";
        
        /// <summary>
        /// Gets or sets the VerifyDelay.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The VerifyDelay.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesignerDemo.GeneralSettings.VerifyDelayPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual int VerifyDelay
        {
            get
            {
                return ((int)(base[global::ConfigurationSectionDesignerDemo.GeneralSettings.VerifyDelayPropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesignerDemo.GeneralSettings.VerifyDelayPropertyName] = value;
            }
        }
        #endregion
        
        #region FacilityCode Property
        /// <summary>
        /// The XML name of the <see cref="FacilityCode"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string FacilityCodePropertyName = "facilityCode";
        
        /// <summary>
        /// Gets or sets the FacilityCode.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The FacilityCode.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesignerDemo.GeneralSettings.FacilityCodePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string FacilityCode
        {
            get
            {
                return ((string)(base[global::ConfigurationSectionDesignerDemo.GeneralSettings.FacilityCodePropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesignerDemo.GeneralSettings.FacilityCodePropertyName] = value;
            }
        }
        #endregion
        
        #region UsesEmailNotification Property
        /// <summary>
        /// The XML name of the <see cref="UsesEmailNotification"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string UsesEmailNotificationPropertyName = "usesEmailNotification";
        
        /// <summary>
        /// Gets or sets the UsesEmailNotification.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The UsesEmailNotification.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesignerDemo.GeneralSettings.UsesEmailNotificationPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual bool UsesEmailNotification
        {
            get
            {
                return ((bool)(base[global::ConfigurationSectionDesignerDemo.GeneralSettings.UsesEmailNotificationPropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesignerDemo.GeneralSettings.UsesEmailNotificationPropertyName] = value;
            }
        }
        #endregion
        
        #region FromEmailAddress Property
        /// <summary>
        /// The XML name of the <see cref="FromEmailAddress"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string FromEmailAddressPropertyName = "fromEmailAddress";
        
        /// <summary>
        /// Gets or sets the FromEmailAddress.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The FromEmailAddress.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesignerDemo.GeneralSettings.FromEmailAddressPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string FromEmailAddress
        {
            get
            {
                return ((string)(base[global::ConfigurationSectionDesignerDemo.GeneralSettings.FromEmailAddressPropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesignerDemo.GeneralSettings.FromEmailAddressPropertyName] = value;
            }
        }
        #endregion
        
        #region ToEmailAddresses Property
        /// <summary>
        /// The XML name of the <see cref="ToEmailAddresses"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string ToEmailAddressesPropertyName = "toEmailAddresses";
        
        /// <summary>
        /// Gets or sets the ToEmailAddresses.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The ToEmailAddresses.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesignerDemo.GeneralSettings.ToEmailAddressesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string ToEmailAddresses
        {
            get
            {
                return ((string)(base[global::ConfigurationSectionDesignerDemo.GeneralSettings.ToEmailAddressesPropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesignerDemo.GeneralSettings.ToEmailAddressesPropertyName] = value;
            }
        }
        #endregion
        
        #region Filters Property
        /// <summary>
        /// The XML name of the <see cref="Filters"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string FiltersPropertyName = "filters";
        
        /// <summary>
        /// Gets or sets the Filters.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The Filters.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesignerDemo.GeneralSettings.FiltersPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::ConfigurationSectionDesignerDemo.Filters Filters
        {
            get
            {
                return ((global::ConfigurationSectionDesignerDemo.Filters)(base[global::ConfigurationSectionDesignerDemo.GeneralSettings.FiltersPropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesignerDemo.GeneralSettings.FiltersPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace ConfigurationSectionDesignerDemo
{
    
    
    /// <summary>
    /// A collection of Filter instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::ConfigurationSectionDesignerDemo.Filter), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::ConfigurationSectionDesignerDemo.Filters.FilterPropertyName)]
    public partial class Filters : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::ConfigurationSectionDesignerDemo.Filter"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string FilterPropertyName = "filter";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        protected override string ElementName
        {
            get
            {
                return global::ConfigurationSectionDesignerDemo.Filters.FilterPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::ConfigurationSectionDesignerDemo.Filters.FilterPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::ConfigurationSectionDesignerDemo.Filter)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::ConfigurationSectionDesignerDemo.Filter"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::ConfigurationSectionDesignerDemo.Filter"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::ConfigurationSectionDesignerDemo.Filter();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::ConfigurationSectionDesignerDemo.Filter"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::ConfigurationSectionDesignerDemo.Filter"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public global::ConfigurationSectionDesignerDemo.Filter this[int index]
        {
            get
            {
                return ((global::ConfigurationSectionDesignerDemo.Filter)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::ConfigurationSectionDesignerDemo.Filter"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::ConfigurationSectionDesignerDemo.Filter"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public global::ConfigurationSectionDesignerDemo.Filter this[object name]
        {
            get
            {
                return ((global::ConfigurationSectionDesignerDemo.Filter)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::ConfigurationSectionDesignerDemo.Filter"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="filter">The <see cref="global::ConfigurationSectionDesignerDemo.Filter"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public void Add(global::ConfigurationSectionDesignerDemo.Filter filter)
        {
            base.BaseAdd(filter);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::ConfigurationSectionDesignerDemo.Filter"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="filter">The <see cref="global::ConfigurationSectionDesignerDemo.Filter"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public void Remove(global::ConfigurationSectionDesignerDemo.Filter filter)
        {
            base.BaseRemove(this.GetElementKey(filter));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::ConfigurationSectionDesignerDemo.Filter"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::ConfigurationSectionDesignerDemo.Filter"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public global::ConfigurationSectionDesignerDemo.Filter GetItemAt(int index)
        {
            return ((global::ConfigurationSectionDesignerDemo.Filter)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::ConfigurationSectionDesignerDemo.Filter"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::ConfigurationSectionDesignerDemo.Filter"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public global::ConfigurationSectionDesignerDemo.Filter GetItemByKey(string name)
        {
            return ((global::ConfigurationSectionDesignerDemo.Filter)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace ConfigurationSectionDesignerDemo
{
    
    
    /// <summary>
    /// The Filter Configuration Element.
    /// </summary>
    public partial class Filter : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesignerDemo.Filter.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::ConfigurationSectionDesignerDemo.Filter.NamePropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesignerDemo.Filter.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Value Property
        /// <summary>
        /// The XML name of the <see cref="Value"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string ValuePropertyName = "value";
        
        /// <summary>
        /// Gets or sets the Value.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The Value.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ConfigurationSectionDesignerDemo.Filter.ValuePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Value
        {
            get
            {
                return ((string)(base[global::ConfigurationSectionDesignerDemo.Filter.ValuePropertyName]));
            }
            set
            {
                base[global::ConfigurationSectionDesignerDemo.Filter.ValuePropertyName] = value;
            }
        }
        #endregion
    }
}
